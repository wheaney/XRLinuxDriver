#!/usr/bin/env bash

# This setup script should do the minimum work required to download the release package, unzip it, and kick off the
# setup script contained within.

# exit when any command fails
set -e

# Make sure only root can run our script
if [ "$(id -u)" != "0" ]; then
   echo "This script must be run as root" 1>&2
   exit 1
fi

# If we're on Steam Deck, check if the file system is readonly, if so, disable readonly and store the state to re-enable later
steam_deck_readonly_fs=0
if [ $(command -v steamos-readonly) ]; then
  if steamos-readonly status | grep -q "enabled"; then
    steam_deck_readonly_fs=1
    echo "Disabling readonly SteamOS partition"
    steamos-readonly disable
  fi
fi

# create temp directory
tmp_dir=$(mktemp -d -t xreal-air-XXXXXXXXXX)
pushd $tmp_dir > /dev/null
echo "Created temp directory: ${tmp_dir}"

if [ -z "$1" ]
then
  # download and unzip the latest driver
  echo "Downloading latest release to: ${tmp_dir}/xrealAirLinuxDriver.tar.gz"
  curl -L -O https://github.com/wheaney/xrealAirLinuxDriver/releases/latest/download/xrealAirLinuxDriver.tar.gz
else
  cp $1 $tmp_dir
fi

echo "Extracting to: ${tmp_dir}/driver_air_glasses"
tar -xf xrealAirLinuxDriver.tar.gz

pushd driver_air_glasses > /dev/null

# run the setup script that comes with this release
./setup

echo "Deleting temp directory: ${tmp_dir}"
rm -rf $tmp_dir
cd "$(dirs -l -0)" && dirs -c

# If we disabled the Steam Deck readonly file system, re-enable it
if [ "$steam_deck_readonly_fs" -eq 1 ]; then
  echo "Re-enabling readonly SteamOS partition"
  steamos-readonly enable
fi

